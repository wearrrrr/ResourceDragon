macro(lua_test_library)
    set(options)
    set(oneValueArgs NAME)
    set(multiValueArgs SOURCES)
    cmake_parse_arguments(LUA_TEST_LIB "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})

    add_library(lua_test_${LUA_TEST_LIB_NAME} MODULE)
    target_sources(lua_test_${LUA_TEST_LIB_NAME} PRIVATE ${LUA_TEST_LIB_SOURCES})
    target_compile_definitions(lua_test_${LUA_TEST_LIB_NAME} PRIVATE LUA_LIB)
    set_target_properties(lua_test_${LUA_TEST_LIB_NAME} PROPERTIES PREFIX "" LIBRARY_OUTPUT_NAME ${LUA_TEST_LIB_NAME})
    target_link_libraries(lua_test_${LUA_TEST_LIB_NAME} PRIVATE lua_library)
endmacro()

if (BUILD_SHARED_LIBS)
    lua_test_library(NAME lib1 SOURCES lib1.c)
    lua_test_library(NAME lib11 SOURCES lib11.c lib1.c)
    lua_test_library(NAME lib2 SOURCES lib2.c)
    lua_test_library(NAME lib21 SOURCES lib21.c lib2.c)
    lua_test_library(NAME lib2-v2 SOURCES lib22.c)
endif ()
